/** Assignemnt 4* group of 2* Bertin Mihigo Sano. ID 40157663* Kruti Patel. ID*/#include "Employee.h"using namespace std;// Employee class will be implemented below aka all member functionsEmployee::Employee(int EmployeeNumber, string FirstName, string LastName, string DateofBirth, string ADDRESS, int startYear, double compensation, telephone t)    :EmployeeID{EmployeeNumber}, yearHired{startYear} // initialize const members    {        Fname= FirstName;        Lname = LastName;        DOB = DateofBirth;        address = ADDRESS;        salary = compensation;        Tel.areaCode = t.areaCode;        Tel.phoneNumber = t.phoneNumber;    } // constructorint Employee::getEmployeeID(void){    return EmployeeID;} //Return the employee id number.string Employee::getFname(void){    return Fname;} // Return the first name of the employeevoid Employee::changeFname(string FirstName){    Fname = FirstName;} //Modify the first name of the employeestring Employee::getLname(void){    return Lname;} // Return the last name of the employeevoid Employee::changeLname(string LastName){    Lname = LastName;} //Modify the last name of the employeeint Employee::getHiredYear(void){    return yearHired;} // Return the hired year of the employeestring Employee::getFullName(){    return (Fname+" "+Lname);} // Return the full name, i.e., first name and last namestring Employee::getDOB(){    return DOB;}//Return the date of birthvoid Employee::changeDOB(string DateofBirth){    DOB = DateofBirth;}//Modify the date of birthdouble Employee::getSalary(void){    return salary;}//Return the salary of the employeevoid Employee::changeSalary(double newSalary){    salary = newSalary;} //Modify the salary of the employeestring Employee::getAddress(void){    return address;} //Return the address of the employeevoid Employee::changeAddress(string NewAddress){    address = NewAddress;} // Modify the address of the employeetelephone Employee::getTelephone(void){    return Tel;} //Return the telephone numbervoid Employee::changeTelephone(telephone NewTel){    Tel.areaCode = NewTel.areaCode;    Tel.phoneNumber = NewTel.phoneNumber;}//Modify the telephone numberbool Employee::isSameLname(Employee otherEmployee){    string AA = this->Lname;    string BB = otherEmployee.getLname();    for(int i=0;i<AA.length();i++){ // convert both strings to lowercase        AA[i]= tolower(AA[i]);    }    for(int i=0;i<BB.length();i++){ // convert both strings to lowercase        BB[i]= tolower(BB[i]);    }    if(AA==BB)        return true;    else        return false;} //Return true if two given employees have the same last name. Return false otherwisebool Employee::isSameSalaryORSameYear(Employee otherEmployee){    if(salary == otherEmployee.getSalary() || yearHired == otherEmployee.getHiredYear())        return true;    else        return false;}//Return true if two employees have the same salary or they were hired on the same year. Return false otherwise